{
  "name": "Animal Wildlife Estimator using Social Media",
  "tagline": "Scripts for identifying biases in sharing of animal pictures on social media and models to predict likelihood of a picture being shared on social media platform.",
<<<<<<< HEAD
  "body": "### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here [using GitHub Flavored Markdown](https://guides.github.com/features/mastering-markdown/), select a template crafted by a designer, and publish. After your page is generated, you can check out the new `gh-pages` branch locally. If you’re using GitHub Desktop, simply sync your repository and you’ll see the new branch.\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
=======
  "body": "#### Animal Photo Bias Scripts\r\n##### Author: Sreejith Menon\r\n\r\n###### Project home-page: http://compbio.cs.uic.edu/~sreejith/PhotoBias.html\r\n\r\n###### Features implemented - to date\r\n1. Create mechanical turk jobs - only user input needed is number of jobs we need.\r\n\r\n2. Create deployment, approval and download scripts for all the mechanical turk jobs.\r\n\r\n3. Parse .results file and have a python object/csv/json ready for processing. \r\n\r\n4. Extract all essential features given a list of images (can be specified as a csv)\r\n\r\n5. Join features with the results and return python data-frames/csv/json for statistical calculation.\r\n\r\n6. Generate general rank lists (by number of shares per images, species, age etc.)\r\n\r\n7. Generate a per job rank list (number of shares for zebra in a particular album versus number of shares for giraffes etc.)\r\n\r\n8. Generate rank list by share proportion based on ecological features like species, sex, age, view_point of the animal.\r\n\r\n9. Generate rank list by share proportion based on album features and other image EXIF information.\r\n\r\n10. Append the results from Amazon Mechanical Turk API with tags from Microsoft Image Tagging API and generate a rank list by share proportion.\r\n\r\n11. Build a regression model with all the ecological factors and tags from Microsoft Image Tagging API using the bag-of-words model.\r\n\r\n12. Evaluate various performance metrics of the learned algorithm using parameters like ROC/AUC, RSS, RMSE and F-scores.\r\n\r\n\r\n\r\n\r\n\r\n",
>>>>>>> origin/gh-pages
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}